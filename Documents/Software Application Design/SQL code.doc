#Users table
CREATE TABLE Users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    is_staff BOOLEAN DEFAULT false,
    is_active BOOLEAN DEFAULT false,
    date_joined TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    -- Additional table for the many-to-many relationship between Users and Jobs
    user_jobs INT
);

ALTER TABLE Users
ADD CONSTRAINT FK_Users_user_jobs
FOREIGN KEY (user_jobs)
REFERENCES Jobs(id);
select * from users;

#User Profile table
CREATE TABLE UserProfile (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL UNIQUE,
    profile_picture VARCHAR(255),
    bio VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES Users(id)
);


#About us table
CREATE TABLE AboutUs (
    id INT PRIMARY KEY AUTO_INCREMENT,
    information VARCHAR(255) NOT NULL
);

#Job categories table
CREATE TABLE JobCategories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

#Jobs table
CREATE TABLE Jobs (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    thumbnail VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    category_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(id),
    FOREIGN KEY (category_id) REFERENCES JobCategories(id)
);

#Messages table
CREATE TABLE Messages (
    id INT PRIMARY KEY AUTO_INCREMENT,
    message_text VARCHAR(255) NOT NULL,
    sender_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES Users(id)
);

#Ratings table
CREATE TABLE Ratings (
    id INT PRIMARY KEY AUTO_INCREMENT,
    job_id INT NOT NULL,
    freelancer_id INT NOT NULL,
    user_id INT NOT NULL,
    rating INT NOT NULL,
    feedback VARCHAR(255),
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (job_id) REFERENCES Jobs(id),
    FOREIGN KEY (freelancer_id) REFERENCES Users(id),
    FOREIGN KEY (user_id) REFERENCES Users(id)
);

#Services table
CREATE TABLE Services (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    thumbnail VARCHAR(255) NOT NULL
);




