UPLOADING IMAGES IN REACT
1) Install the multer library.
	[ npm install multer ]
2) In your React component, create a useState hook to store the image file.
[ const [image, setImage] = useState(null) ]
3) Create a submit function that will upload the image file to the server.
[
async function submit(event) {
  const formData = new FormData();
  formData.append('image', event.target.image.files[0]);
		
  try {
    const response = await axios.post(apiURL, formData);
    //handle response
  } catch (error) {
    // Handle error
  }
};

]

4) Render the image input field and the submit button.
[ 
<input type="file" accept="images/*" name="image" 
onChange={(event) => setImage(URL.createObjectURL(event.target.files[0]))} />

<button onClick={submit}>Submit</button>
	
]



5) In your Express server, use the multer middleware to handle the image upload.

[
const multer = require('multer');
const storage = multer.diskStorage({
  destination: function(req, file, cb) {
    cb(null, './public/images');
  },
  filename: function(req, file, cb) {
    cb(null, Date.now() + '-' + file.originalname);
  }
});

const upload = multer({ storage });

router.post("/createJob", upload.single('image'), createJob);
]

NOTES TO CONSIDER!!
INPUT FIELD
<input type="file" accept="images/*" name="image" 
onChange={(event) => setImage(URL.createObjectURL(event.target.files[0]))} />

Formdata:
  formData.append('image', event.target.image.files[0]);

* after .target. in the .sppend() the variable name should be the attribute's name value of the file inputin this case the input field's name attribute is set to �image� so it will be
	event.target.image 
* however if the input field name attribute was set to thumbnail it will be like this event.target.thumbnail.files[0] 
* this is the general format event.target.[nameAttribute_value].files[0]
* you can even log it with console.log(event.target.[nameAttribute_value].files[0])
* recommend setting the image field in the database to string
	
